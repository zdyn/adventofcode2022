#!/usr/bin/env -S deno run --allow-net --allow-read --allow-write

const day = ("0" + Deno.args[0]).slice(-2);
const inputFilename = `${day}.txt`;
let input;

try {
  input = await Deno.readTextFile(inputFilename);
} catch (error) {
  const session = await Deno.readTextFile("session");
  const response = await fetch(`https://adventofcode.com/2022/day/${Number(day)}/input`, {
    headers: {
      cookie: `session=${session}`,
    },
  });
  if (response.status !== 200) {
    console.log("Input not available");
    Deno.exit(1);
  }

  input = await response.text();
  await Deno.writeTextFile(inputFilename, input);
}

const measure = async (input, isSample = false) => {
  performance.mark("start");
  const result = await run(input, isSample);
  performance.mark("end");
  if (!result) return;

  const [p1, p2] = result;
  console.log(performance.measure("", "start", "end").duration, "ms");
  console.log("Part 1:", p1);
  console.log("Part 2:", p2);
};
const { run, samples = [] } = await import(`./${day}.js`);

for (let sample of [].concat(samples)) {
  await measure(sample, true);
}
await measure(input);
